<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hippobookproject.mapper.user.MypageMapper">
    <select id="selectProfile" resultType="IntProfileDto">
        SELECT U.USER_NICKNAME,
               (SELECT COUNT(FOLLOW_ID) FROM TBL_FOLLOW WHERE FOLLOW_TO = U.USER_ID) FOLLOWING_CNT,
               (SELECT COUNT(FOLLOW_ID) FROM TBL_FOLLOW WHERE FOLLOW_FROM = U.USER_ID) FOLLOWER_CNT,
               CF.FILE_ID, CF.FILE_UPLOAD_PATH, CF.FILE_UUID, CF.FILE_NAME
        FROM TBL_USER U
                 LEFT JOIN TBL_BOOK_HAS H
                      ON U.BEST_BOOK_ID= H.BOOK_HAS_ID
                 LEFT JOIN TBL_COVERFILE CF
                           ON H.BOOK_ID = CF.BOOK_ID
        WHERE U.USER_ID = #{userId}
    </select>

    <insert id="insertIntBoardText" parameterType="IntBoardDto">
        INSERT INTO TBL_INT_BOARD (INT_BOARD_ID, INT_BOARD_CONTENT, USER_ID)
        VALUES (SEQ_INT_BOARD.nextval, #{intBoardContent}, #{userId})
    </insert>

    <select id="selectIntBoardText" resultType="IntBoardDto">
        SELECT INT_BOARD_CONTENT
            FROM TBL_INT_BOARD
        WHERE USER_ID = #{userId}
    </select>

    <update id="updateIntBoardText" parameterType="IntBoardDto">
        UPDATE TBL_INT_BOARD
        SET INT_BOARD_CONTENT = #{intBoardContent}
        WHERE USER_ID =#{userId}
    </update>

    <select id="selectRecentBook" resultType="BookContainerDto">
        <![CDATA[
        SELECT BOOK_HAS_ID, T.BOOKCASE_ID, T.BOOK_ID, T.USER_ID, B.BOOK_NAME, B.BOOK_WRITER,TO_CHAR(T.BOOK_HAS_RECENT_DATE, 'YYYY-MM-DD') AS BOOK_HAS_RECENT_DATE,
        CF.FILE_NAME, CF.FILE_UPLOAD_PATH, CF.FILE_UUID, CF.FILE_ID
        FROM TBL_USER U
        JOIN (SELECT BOOK_HAS_RECENT_DATE,BOOK_HAS_ID, BOOK_HAS_PERCENT, H.BOOKCASE_ID, BOOK_ID, C.USER_ID, BOOKCASE_CREATE,BOOKCASE_NAME
        FROM TBL_BOOK_HAS H
        JOIN TBL_BOOKCASE C
        ON H.BOOKCASE_ID = C.BOOKCASE_ID) T
        ON T.USER_ID = #{userId} AND U.USER_ID = T.USER_ID
        JOIN TBL_BOOK B
        ON T.BOOK_ID = B.BOOK_ID
        LEFT JOIN TBL_COVERFILE CF ON T.BOOK_ID = CF.BOOK_ID
        WHERE ROWNUM <=2
        ORDER BY T.BOOK_HAS_RECENT_DATE DESC
        ]]>
    </select>

    <select id="selectMyContent">
        SELECT FEED_ID, FEED_TITLE, FEED_TYPE, FEED_DATE, USER_ID, FFL.BOOK_ID,TOTAL_LIKE,
               FILE_ID,FILE_NAME,FILE_UPLOAD_PATH,FILE_UUID
        FROM (SELECT F.FEED_ID, FEED_TITLE, FEED_TYPE, FEED_DATE, F.USER_ID, BOOK_ID,TOTAL_LIKE
              FROM TBL_FEED F JOIN (SELECT SUM(FEED_LIKE_ID) AS TOTAL_LIKE ,FEED_ID
                                    FROM TBL_FEED_LIKE
                                    GROUP BY FEED_ID) FL
                                   ON F.FEED_ID = FL.FEED_ID) FFL
                 JOIN TBL_COVERFILE CF
                      ON FFL.BOOK_ID = CF.BOOK_ID
        WHERE FFL.USER_ID = #{userId}
    </select>




</mapper>